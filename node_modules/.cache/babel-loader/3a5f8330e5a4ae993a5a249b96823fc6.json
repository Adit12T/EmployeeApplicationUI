{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\EmployeeApplicationUI\\\\src\\\\components\\\\Login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Router } from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, Card, Checkbox, Icon } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\nvar FormItem = Form.Item;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props)); // defining the state to the component\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.dispatch(loginUser(_this.state.data.email, _this.state.data.password));\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        try {\n          _this.props.history.push(\"/home\");\n        } catch (e) {\n          alert(e.message);\n        }\n      });\n    };\n\n    _this.state = {\n      data: {\n        email: 'testbiz@rsrit.com',\n        password: '123456',\n        isBusiness: true\n      },\n      loading: false,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"register now!\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log(props.result);\n      return null;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    result: state.auth.result\n  };\n};\n\nvar WrappedNormalLoginForm = Form.create()(Login); //ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\n\nexport default connect(mapStateToProps)(WrappedNormalLoginForm); //export default WrappedNormalLoginForm;","map":{"version":3,"sources":["C:\\React\\EmployeeApplicationUI\\src\\components\\Login\\index.js"],"names":["React","Component","connect","PropTypes","Router","Link","ReactDOM","Form","Input","Button","Card","Checkbox","Icon","loginUser","getBusinessUsersList","FormItem","Item","Login","props","handleSubmit","e","preventDefault","dispatch","state","data","email","password","form","validateFields","err","values","console","log","history","push","alert","message","isBusiness","loading","errors","getFieldDecorator","rules","required","color","valuePropName","initialValue","result","propTypes","mapStateToProps","auth","WrappedNormalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { Router } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Input, Button, Card, Checkbox, Icon } from 'antd';\r\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // defining the state to the component\r\n        this.state = {\r\n            data: {\r\n                email: 'testbiz@rsrit.com',\r\n                password: '123456',\r\n                isBusiness: true\r\n            },\r\n            loading: false,\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        console.log(props.result);\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(loginUser(this.state.data.email, this.state.data.password));\r\n\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n\r\n            try {\r\n\r\n                this.props.history.push(\"/home\");\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <FormItem>\r\n                    {getFieldDecorator('userName', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    )}\r\n                    <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n              </Button>\r\n                    Or <a href=\"\">register now!</a>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        result: state.auth.result\r\n    };\r\n};\r\nconst WrappedNormalLoginForm = Form.create()(Login);\r\n\r\n//ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\r\n\r\nexport default connect(mapStateToProps)(WrappedNormalLoginForm);\r\n\r\n//export default WrappedNormalLoginForm;\r\n"]},"metadata":{},"sourceType":"module"}